{"version":3,"sources":["Work.js","App.js","reportWebVitals.js","index.js"],"names":["Work","props","Change","input","document","querySelector","List","value","split","Test","Name","Time","Status","className","console","log","Todo","state","list","push","setState","Delete","Tododelete","filter","item","index","Check","todo","map","key","type","placeholder","onClick","this","bind","id","onChange","e","alert","target","checked","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mPAyHeA,E,kDAtHX,WAAYC,GACX,IAAD,8BACI,cAAMA,IAoBVC,OAAO,WAEH,IAAMC,EAAMC,SAASC,cAAc,qBAC7BC,EAAKH,EAAMI,MAAMC,MAAM,KACvBC,EAAK,CACPC,KAAKJ,EAAK,GACVK,KAAKL,EAAK,GACVM,OAAO,sBAAMC,UAAU,aAAhB,SAA6B,mBAAGA,UAAU,wBAErDC,QAAQC,IAAIN,GACZ,IAAMO,EAAK,EAAKC,MAAMC,KACtBF,EAAKG,KAAKV,GACVK,QAAQC,IAAIC,GACZ,EAAKI,SAAS,CACVF,KAAKF,IAETb,EAAMI,MAAM,IArChB,EAwCAc,OAAO,SAACpB,GACJa,QAAQC,IAAId,GACZ,IAAMqB,EAAW,EAAKL,MAAMC,KAE5BJ,QAAQC,IAAIO,GACZ,EAAKF,SAAS,CACVF,KAAKI,EAAWC,QAAO,SAACC,EAAMC,GAC1B,OAAOA,IAAQxB,QA/C3B,EAmDAyB,MAAM,SAACD,GACH,IAAME,EAAK,EAAKV,MAAMC,KAItB,EAAKE,SACD,CACAF,KAAKS,EAAKC,KAAI,SAACJ,EAAMK,GACb,OAAGA,GAAKJ,EACF,CACFf,KAAKc,EAAKd,KACVC,KAAKa,EAAKb,KACVe,MAAM,OACNd,OAAO,sBAAMC,UAAU,YAAhB,SAA4B,mBAAGA,UAAU,8BAG7CW,QAjEnB,EAAKP,MACL,CACIC,KAAK,CAEL,CACIR,KAAK,UACLC,KAAK,YACLe,MAAM,OACNd,OAAO,sBAAMC,UAAU,YAAhB,SAA4B,mBAAGA,UAAU,8BAEpD,CACIH,KAAK,UACLC,KAAK,YACLe,MAAM,QACNd,OAAO,sBAAMC,UAAU,aAAhB,SAA6B,mBAAGA,UAAU,0BAhB7D,E,0CAyEA,WACC,IAAD,OACI,OACI,gCACI,sBAAMA,UAAU,aAAhB,UACE,uBAAOiB,KAAK,OAAOjB,UAAU,cAAckB,YAAY,iCACvD,wBAAQlB,UAAU,UAAUmB,QAASC,KAAK/B,OAAOgC,KAAKD,MAAtD,oBAEF,oBAAIE,GAAG,cAAP,SAEKF,KAAKhB,MAAMC,KAAKU,KAAI,SAACJ,EAAMC,GACxB,MAAe,QAAZD,EAAKE,MAEJ,+BACI,sBAAKb,UAAU,WAAf,UAA2BW,EAAKd,KAAhC,OACA,+BAAOc,EAAKb,OACXa,EAAKZ,OACN,wBAAQC,UAAU,UAAUmB,QAAS,EAAKX,OAAOa,KAAK,EAAMT,GAA5D,oBACA,uBAAOK,KAAK,WAAWM,SAAU,SAACC,GAAKC,MAAMD,EAAEE,OAAOC,cALjDf,GAWL,+BACI,sBAAKZ,UAAU,WAAf,UAA2BW,EAAKd,KAAhC,OACA,+BAAOc,EAAKb,OACXa,EAAKZ,OACN,wBAAQC,UAAU,UAAUmB,QAAS,EAAKX,OAAOa,KAAK,EAAMT,GAA5D,oBACA,wBAAQZ,UAAU,WAAWmB,QAAS,EAAKN,MAAMQ,KAAK,EAAMT,GAA5D,wBALKA,e,GAnGtBgB,aCsBJC,E,4JApBb,WAEE,OACE,qBAAK7B,UAAU,OAAf,SACE,sBAAKA,UAAU,WAAf,UACE,oBAAIA,UAAU,SAAd,sBACA,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,UAAf,SACE,cAAC,EAAD,iB,GATI4B,aCSHE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlD,SAASmD,eAAe,SAM1BZ,M","file":"static/js/main.d08f0ddf.chunk.js","sourcesContent":["import React, {Component} from   \"react\"\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nclass Work extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state=\r\n        {\r\n            list:[\r\n\r\n            {\r\n                Name:\"English\",\r\n                Time:\"12/3/2020\",\r\n                Check:\"true\",\r\n                Status:<span className=\"Icon-true\"><i className='fas fa-clipboard-check'></i></span>\r\n            },\r\n            {\r\n                Name:\"Reactjs\",\r\n                Time:\"15/4/2021\",\r\n                Check:\"false\",\r\n                Status:<span className=\"Icon-false\"><i className=\"fas fa-clipboard\"></i></span>\r\n            }\r\n        ]\r\n        }\r\n    }\r\n    Change=()=>\r\n    {\r\n        const input=document.querySelector(\".Box_Header input\");\r\n        const List=input.value.split(\"=\");\r\n        const Test={\r\n            Name:List[0],\r\n            Time:List[1],\r\n            Status:<span className=\"Icon-false\"><i className=\"fas fa-clipboard\"></i></span>\r\n        }\r\n        console.log(Test);\r\n        const Todo=this.state.list;\r\n        Todo.push(Test);\r\n        console.log(Todo);\r\n        this.setState({\r\n            list:Todo\r\n        });\r\n        input.value=\"\";\r\n        \r\n    }\r\n    Delete=(props)=>{\r\n        console.log(props);\r\n        const Tododelete=this.state.list;\r\n        \r\n        console.log(Tododelete);\r\n        this.setState({\r\n            list:Tododelete.filter((item, index)=>{\r\n                return index!==props;\r\n            })\r\n        })\r\n    }\r\n    Check=(index)=>{\r\n        const todo=this.state.list;\r\n        // console.log(index);\r\n        // console.log(todo);\r\n        // console.log(todo[1].Check);\r\n        this.setState(\r\n            {\r\n            list:todo.map((item, key)=>{\r\n                    if(key==index)\r\n                    return{\r\n                        Name:item.Name,\r\n                        Time:item.Time,\r\n                        Check:\"true\",\r\n                        Status:<span className=\"Icon-true\"><i className='fas fa-clipboard-check'></i></span>\r\n                    }\r\n                    else\r\n                    return item   \r\n                    })\r\n            })\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <div  className=\"Box_Header\">\r\n                  <input type=\"text\" className=\"Box_control\" placeholder=\"[Name_work] = [Vd:12/2/2020]\"/>\r\n                  <button className=\"Box_btn\" onClick={this.Change.bind(this)}>Add</button>\r\n                </div>\r\n                <ul id=\"Box_content\">\r\n\r\n                    {this.state.list.map((item, index)=>{\r\n                        if(item.Check==\"true\")\r\n                        return(\r\n                            <li key={index}>\r\n                                <div className=\"Box_name\">{item.Name} </div>\r\n                                <span>{item.Time}</span> \r\n                                {item.Status}\r\n                                <button className=\"Box_btn\" onClick={this.Delete.bind(this, index)}>Delete</button>\r\n                                <input type=\"checkbox\" onChange={(e)=>{alert(e.target.checked)}}/>\r\n                            </li>\r\n                        )\r\n                        else\r\n                        {\r\n                            return(\r\n                                <li key={index}>\r\n                                    <div className=\"Box_name\">{item.Name} </div>\r\n                                    <span>{item.Time}</span> \r\n                                    {item.Status}\r\n                                    <button className=\"Box_btn\" onClick={this.Delete.bind(this, index)}>Delete</button>\r\n                                    <button className=\"Box_btn \" onClick={this.Check.bind(this, index)} >Complete</button>\r\n                                </li>\r\n\r\n                            )\r\n                            \r\n                        }\r\n                       \r\n                    })}\r\n                    \r\n                 </ul>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default Work;","import React, {Component} from \"react\"\nimport './App.css';\nimport Work from \"./Work\"\nclass App extends Component {\n  render()\n  {\n    return (\n      <div className=\"Todo\">\n        <div className=\"Constain\">\n          <h1 className=\"Header\">Todolist</h1>\n          <div className=\"Box\">\n            <div className=\"Box_Add\">\n              <Work/>\n            </div>\n          </div>\n        </div>\n       \n      </div>\n      \n    )\n  }\n\n}\n\nexport default App;\n// Sang\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}